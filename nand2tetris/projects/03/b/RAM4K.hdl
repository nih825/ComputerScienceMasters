// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM4K[address(t)](t)
 *     Write: If load(t-1) then RAM4K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here.
    DMux8Way(in=load,sel=address[9..11],a=ram1,b=ram2,c=ram3,d=ram4,e=ram5,f=ram6,g=ram7,h=ram8);
    RAM512(in=in,load=ram1, address=address[0..8],out=out1);
    RAM512(in=in,load=ram2,address=address[0..8],out=out2);
    RAM512(in=in,load=ram3, address=address[0..8],out=out3);
    RAM512(in=in,load=ram4,address=address[0..8],out=out4);
    RAM512(in=in,load=ram5,address=address[0..8],out=out5);
    RAM512(in=in,load=ram6,address=address[0..8],out=out6);
    RAM512(in=in,load=ram7,address=address[0..8],out=out7);
    RAM512(in=in,load=ram8, address=address[0..8],out=out8);
    Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,sel=address[9..11],out=out);
}
