
class CircleDestruction {

    field Circle circle;

    
    field int direction; 

    
    constructor CircleDestruction new() {
        let circle = Circle.new(40, 40, 30);
        let direction = 0;

        return this;
    }

    method void dispose() {
        do circle.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void run() {
        var char key;
        var boolean exit;

        let exit = false;

        while (~exit) {

            while (key = 0) {
                let key = Keyboard.keyPressed();
                do moveCircle();
            }

            if (key = 81) {
                let exit = true;
            }
            if (key = 131) {
                let direction = 1;
            }
            if (key = 133) {
                let direction = 2;
            }
            if (key = 130) {
                let direction = 3;
            }
            if (key = 132) {
                let direction = 4;
            }

            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
                do moveCircle();
            }
        }
            
        return;
	}

    method void moveCircle() {
        if (direction = 1) {
            do circle.moveUp();
        }
        if (direction = 2) {
            do circle.moveDown();
        }
        if (direction = 3) {
            do circle.moveLeft();
        }
        if (direction = 4) {
            do circle.moveRight();
        }
        do Screen.drawRectangle(150,150,200,200);
        do Sys.wait(5); // Delays the next movement.
        return;
    }
}
