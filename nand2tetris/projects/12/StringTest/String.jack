// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {
    field int length;
    field int maxlength;
    field Array str;
    /** Constructs a new empty String with a maximum length of maxLength. */
    constructor String new(int maxLength) {
        let length=0;
        let maxlength=maxLength;
        let str=Array.new(maxLength);
        return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
        let length=0;
        let maxlength=0;
        do Memory.deAlloc(str);
        do Memory.deAlloc(this);
        return;
    }

    /** Returns the current length of this String. */
    method int length() {
        return length;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
        return str[j];
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
        let str[j]=c;
        return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
        if(length<maxlength){
            let str[length]=c;
            let length=length+1;
        }
        return this;
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
        let length=length-1;
        return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
        var int iter, num, len, temp;
        let iter=0;
        let num=0;
        let temp=0;
        while(iter<length & str[iter]>47 & str[iter] < 58){
            let iter=iter+1;
        }
        let len=iter;
        while(iter>-1){
            while(temp<len-iter){
                let temp=temp*10;
                let temp=temp+1;
            }
            let num=num+(str[iter]-48)*temp;
            let temp=0;
            let iter=iter-1;
        }
        return num;
    }

    /** Sets this String to hold a representation of the given number. */
    method void setInt(int number) {
        var int num, mod, iter, digit;
        var Array a;
        var String newString;
        let a = Array.new(5);
        let num=Math.abs(number);
        while(iter<5){
            let digit=num-((num/10)*10);
            let a[iter]=digit+48;
            let num=num/10;
            let iter=iter+1;
        }
        let iter=iter-1;

        let newString= String.new(6);
        if(number<0){
            do newString.appendChar(45);
        }
        while(iter>-1){
            do newString.appendChar(a[iter]);
        }
        do Memory.deAlloc(str);
        let str=newString;
        return;

    }

    /** Returns the new line character. */
    function char newLine() {
        return 10;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 8;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
