I have included 3 files: gaussian_elim.cpp, ftcs.cpp, and cn.cpp.  gaussian_elim.cpp is my simple gausian elimination solver with partial pivoting.  cn.cpp contains the code for the implementation of the Cran-Nicholson method.  ftcs.cpp contains the code for my forward time centered space method.  All the code is well commented so I will not go into too much depth in this readme.  The ftcs.cpp also contains a driver that runs both cn and ftcs methods.  In the main method all the parameters can be configured.  Right now I have run it for 1000 iterations but that can easily be changed as well however if the problem size is increased this could take a significant amount of time especially for the cn method as I store the entire matrix with all the zeros.  I have also included an excel file with the plots of running time per algorithmic timestep against problem size.  Let me know if you have any questions about my code.  Please notice that in the 2 plots the time is measured in seconds but ftcs was significantly faster and thus I also have timed it out to a bigger problem size and wider problem size intervals.  Also the timer I have in the driver simply measures the time of all the calculations you can change where you place the timer start and stop locations if you want to see the specific time of any method or step.  This program must be compiled using the c++11 standard so if you are using an IDE(like xcode) you can simply make sure in the project build that it is using c++11 or if you are compiling on the command line using g++ simply use the flag -std=c++11.  It took me a while to get this to work so please let me know if you cant get it to compile in c++11 and I can help you.  

Nihar Bhupalam